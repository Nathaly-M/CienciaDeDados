# -*- coding: utf-8 -*-
"""AnÃ¡lise de Dados (GrÃ¡ficos)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11Lm8HDg8N_Cgv0dEghuWbJLBwwP4ZMeu

# InstruÃ§Ãµes

- Certifique-se que a configuraÃ§Ã£o estÃ¡ correta (Python 3).
"""

#ðŸ‘¾

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
df = pd.read_csv("https://www.dropbox.com/s/78wmve98b0u07iu/fake-classrooms-correl13.csv?dl=1")
x = input()
r = df[x].corr(df['Nota Final'])
print('%.2f' % r)

plt.plot(df[x],df["Nota Final"],'.')
(a, b) = np.polyfit(x=df[x], y=df['Nota Final'], deg = 1)
x = np.arange(0,30)
y = a*x + b
plt.plot(x,y,'r')

#ðŸ‘¾

import pandas as pd
import numpy as np
df = pd.read_csv("https://www.dropbox.com/s/d639ba1mx3pi4vl/fake-classrooms20.csv?dl=1")
x = input()
r = df[x].value_counts()
print(r)
df.hist(column = x)

#ðŸ‘¾

import numpy as np
import matplotlib.pyplot as plt
from sympy import symbols, nroots
x = np.arange(-91, 91, 0.01)
a = -5
b = -6
c = 19
d = 8
y = a*x**3 + b*x**2 + c*x + d
plt.plot(x, y,linewidth=1.5, color="purple")
ax = plt.gca()
ax.spines['right'].set_color('none')
ax.spines['top'].set_color('none')
ax.spines['bottom'].set_position(('data',0))
ax.spines['left'].set_position(('data',0))
ax.set_ylim(-300, 300)
ax.set_xlim(-5, 4)
plt.xticks(np.linspace(-4, 3, 8))
plt.yticks(np.linspace(-200, 200, 5))
x = symbols('x')
y = a*x**3 + b*x**2 + c*x + d
raizes = nroots(y)
maior = np.max(raizes)
print('%.2f dias' % maior)

#ðŸ‘¾

import numpy as np
import matplotlib.pyplot as plt
import math
x = np.arange(-91, 91, 0.01)
a = 1
b = -15
c = -1
y = a*x**2 + b*x + c
delta = b**2 - 4*a*c
raiz1 = (-b + math.sqrt(delta))/(2*a)
raiz2 = (-b - math.sqrt(delta))/(2*a)
plt.plot(x, y,linewidth=1.5, color="purple")
ax = plt.gca()
ax.spines['right'].set_color('none')
ax.spines['top'].set_color('none')
ax.spines['bottom'].set_position(('data',0))
ax.spines['left'].set_position(('data',0))
ax.set_ylim(-70, 11)
ax.set_xlim(0, 16)
plt.xticks(np.linspace(0, 15, 7))
plt.yticks(np.linspace(-60, 10, 8))
plt.scatter([raiz1, ], [a*raiz1**2 + b*raiz1 + c, ])
print('%.2f dias' % raiz1)